/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package school;

/**
 *
 * @author STUDENT10
 */
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.HeadlessException;
import java.awt.RenderingHints;
import java.awt.event.KeyEvent;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;


public class Registration extends javax.swing.JFrame {
    private ImageIcon ii;
    File f;
    
    

    /**
     * Creates new form Registration
     */
    Pattern SpecialCharPatten=Pattern.compile("[^a-z0-9]",Pattern.CASE_INSENSITIVE);
    Pattern UpperCasePatten=Pattern.compile("[A-Z]");
    Pattern lowerCasePatten=Pattern.compile("[a-z]");
    Pattern digitalCasePatten=Pattern.compile("[0-9]");
    Pattern emailpattern=Pattern.compile("^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$");
    //Pattern mobilepattern=Pattern.compile("^(1\\-)?[0-9]{3}\\-?[0-9]{3}\\-?[0-9]{4}$");
    Pattern mobilepatten=Pattern.compile("^[0-9]{9}$");
       
    public Registration() {
        getContentPane().setBackground(new Color(204,255,204));
        initComponents();
        radioGender.add(radioMale);
        radioGender.add(radioFemale);
        radioMale.setSelected(true);
        userName2.requestFocus();
        userphoto.setVisible(false);

    }
    
    private static Boolean isJPEG(File filename) throws Exception {
    DataInputStream ins = new DataInputStream(new BufferedInputStream(new FileInputStream(filename)));
     try {
        switch (ins.readInt()) {
            case 0x89504e47:
                return true;
            case 0xffd8ffe0:
                return true;
            case 0x424d:
                return true;
            case 0x47494638:
                return true;
            case 0x474b534d:
                return true;
            case 0x01da:
                return true;
            case 0xf10040bb:
                return true;
            case 0x49494e31:
                return true;
            case 0x56494557:
                return true;
            case 0x59a66a95:
                return true;
            case 0x4d4d002a:
                return true;
            case 0x49492a00:
                return true;
            case 0x23464947:
                return true;
            case 0x4949:
                return true;
            case 0x38425053:
                return true;
            default:
                return false;
        }
    } finally {
        ins.close();
    }
    }
    public void tick(java.awt.event.ActionEvent evt){
        accept.setSelected(true);
    }
    public static BufferedImage linearResizeBi(BufferedImage origin, int width, int height) {
       BufferedImage resizedImage = new BufferedImage(width, height ,BufferedImage.TYPE_INT_RGB);
        Graphics2D g = resizedImage.createGraphics();
        float xScale = (float)width / origin.getWidth();
        float yScale = (float)height / origin.getHeight();
        AffineTransform at = AffineTransform.getScaleInstance(xScale,yScale);
        g.drawRenderedImage(origin,at);
        g.dispose();
        return resizedImage;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        radioGender = new javax.swing.ButtonGroup();
        uID = new javax.swing.JTextField();
        userName2 = new javax.swing.JTextField();
        fullName = new javax.swing.JTextField();
        confirmPassWord = new javax.swing.JPasswordField();
        passWord2 = new javax.swing.JPasswordField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        accept = new javax.swing.JCheckBox();
        jComboBox2 = new javax.swing.JComboBox<>();
        radioFemale = new javax.swing.JRadioButton();
        radioMale = new javax.swing.JRadioButton();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        emailaddress = new javax.swing.JLabel();
        Mobilenumber = new javax.swing.JLabel();
        mobile = new javax.swing.JTextField();
        username = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        uploadphoto = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        help = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        pathname = new javax.swing.JTextField();
        codego = new javax.swing.JButton();
        userphoto = new javax.swing.JLabel();

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/University-of-Moratuwa-Sumanadasa-Building.jpg"))); // NOI18N
        jLabel10.setText("jLabel10");

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/University-of-Moratuwa-Sumanadasa-Building.jpg"))); // NOI18N
        jLabel11.setText("jLabel11");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registration at UoM");
        setBackground(new java.awt.Color(204, 255, 255));
        setMaximumSize(new java.awt.Dimension(825, 580));
        setMinimumSize(new java.awt.Dimension(825, 580));
        setPreferredSize(new java.awt.Dimension(825, 580));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        uID.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        uID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uIDActionPerformed(evt);
            }
        });
        uID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                uIDKeyPressed(evt);
            }
        });
        getContentPane().add(uID, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 240, 80, 22));

        userName2.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        userName2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userName2ActionPerformed(evt);
            }
        });
        userName2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userName2KeyPressed(evt);
            }
        });
        getContentPane().add(userName2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, 240, -1));

        fullName.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        fullName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fullNameKeyPressed(evt);
            }
        });
        getContentPane().add(fullName, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, 240, -1));

        confirmPassWord.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        confirmPassWord.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                confirmPassWordKeyPressed(evt);
            }
        });
        getContentPane().add(confirmPassWord, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 210, 240, 20));

        passWord2.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        passWord2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passWord2KeyPressed(evt);
            }
        });
        getContentPane().add(passWord2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, 240, 20));

        jComboBox1.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jComboBox1.setMaximumRowCount(10);
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Engineering", "Architecture", "Information Technology", "Business Management", "Graduate Studies", "Other" }));
        jComboBox1.setToolTipText("");
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 270, 200, -1));

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(51, 51, 255));
        jButton1.setText("Save");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 450, 110, 50));

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jButton2.setText("Reset Information");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 450, -1, -1));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("University of Moratuwa");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 24, 390, 40));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Register");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 100, 30));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel3.setText("Department");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, 120, 20));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel4.setText("User name");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 120, 20));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel5.setText("Full name");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, 120, 20));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel6.setText("Password");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, 120, 20));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel7.setText("Confirm Password");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, 120, 20));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel8.setText("UID");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 240, 120, 20));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel9.setText("Faculty");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, 120, 20));

        accept.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        accept.setText("I accept the General and Specific Codes of Conduct of the University and I abide to follow those Codes at the University");
        getContentPane().add(accept, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 365, -1, -1));

        jComboBox2.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Electrical & Power Systems Engineering", "Electronic Engineering", "BioMedical Engineering", "Civil Engineering", "Mechanical Engineering", "NDT", "Architecture & Interior Designing", "Information Technology & Systems", "Business Administration", "Business Management", "Postgraduate Studies" }));
        getContentPane().add(jComboBox2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 300, 200, -1));

        radioFemale.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        radioFemale.setText("Female");
        getContentPane().add(radioFemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 330, -1, -1));

        radioMale.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        radioMale.setText("Male");
        getContentPane().add(radioMale, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 330, -1, -1));

        jComboBox3.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Senior Professor", "Professor", "Senior Lecturer G-1", "Senior Lecturer G-2", "Lecturer", "Assistant Lecturer", "Post Graduate student", "Student 4th Year", "Student 3rd Year", "Student 2nd Year", "Student 1st Year", "Non-Academic(Administrative Assist)", "Non-Academic(Laboratory)", "Student Councellor", "Medical Centre Staff Member", "Labour" }));
        jComboBox3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jComboBox3FocusLost(evt);
            }
        });
        jComboBox3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox3KeyPressed(evt);
            }
        });
        getContentPane().add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 240, 155, 22));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText(" All Rights Reserved by UoM");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 513, 170, 30));

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/University_of_Moratuwa_logo.png"))); // NOI18N
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 50, -1, -1));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel14.setText("Gender");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, 120, 20));

        jButton3.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jButton3.setText("Back");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 485, 135, -1));

        emailaddress.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        emailaddress.setText("E-mail Address");
        getContentPane().add(emailaddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 120, 100, -1));

        Mobilenumber.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        Mobilenumber.setText("Mobile Number");
        getContentPane().add(Mobilenumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 150, 100, 20));

        mobile.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        mobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileActionPerformed(evt);
            }
        });
        mobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mobileKeyPressed(evt);
            }
        });
        getContentPane().add(mobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 150, 145, -1));

        username.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        username.setForeground(new java.awt.Color(51, 51, 255));
        username.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        username.setText("username");
        getContentPane().add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(1530, 620, 220, 40));

        email.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });
        email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                emailKeyPressed(evt);
            }
        });
        getContentPane().add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 120, 175, -1));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Profile Photo");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 260, 120, 20));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Upload Your");
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 240, 120, 20));

        uploadphoto.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        uploadphoto.setText("Upload here");
        uploadphoto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        uploadphoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadphotoActionPerformed(evt);
            }
        });
        uploadphoto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                uploadphotoKeyPressed(evt);
            }
        });
        getContentPane().add(uploadphoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 180, 175, 135));

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jTextField1.setText("+94");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 150, 30, -1));

        help.setBorderPainted(false);
        help.setContentAreaFilled(false);
        help.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpActionPerformed(evt);
            }
        });
        getContentPane().add(help, new org.netbeans.lib.awtextra.AbsoluteConstraints(775, 5, 40, 40));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/help.png"))); // NOI18N
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(775, 5, 40, 40));

        pathname.setEditable(false);
        pathname.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        getContentPane().add(pathname, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 318, 175, -1));

        codego.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        codego.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/resize.png"))); // NOI18N
        codego.setText("* Go to the General Code of Conduct of University of Moratuwa and exit the Registration");
        codego.setBorderPainted(false);
        codego.setContentAreaFilled(false);
        codego.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        codego.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codegoActionPerformed(evt);
            }
        });
        getContentPane().add(codego, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 390, -1, -1));
        getContentPane().add(userphoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 120, 150, 150));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String userreg=userName2.getText();
        String uidreg=uID.getText();
        String facultyreg=jComboBox1.getSelectedItem().toString();
        String departmentreg=jComboBox2.getSelectedItem().toString();
        
       
        String gender="Male";
        int gendervalue=1;
        if(radioFemale.isSelected()){
            gender="Female";
            gendervalue=0;
        }else if(radioMale.isSelected()){
            gender="Male";
            gendervalue=1;
        }else{
            //no else part
        }
        String Check=null;
        boolean CheckValue=false;
        if(accept.isSelected()){
            CheckValue=true;
        }else{
            CheckValue=false;
        }
        
        //String username="admin";
       if(userName2.getText().isEmpty() || fullName.getText().isEmpty() || uID.getText().isEmpty()){
           JOptionPane.showMessageDialog(this,"One or more data is/are missing !        \nCheck all fields and try again !                             ");
       }
       else if(userName2.getText().length()<3 || userName2.getText().length()>30){
           JOptionPane.showMessageDialog(this,"Entered User name cannot be accepted !");
        }else if(fullName.getText().length()<6 ||fullName.getText().length()>50 ){  
            JOptionPane.showMessageDialog(this,"Entered Full Name cannot be accepted !");
        }else if(passWord2.getText().length()<8 || passWord2.getText().length()>64){
            JOptionPane.showMessageDialog(this,"Password must have at least eight characters ");
        }else if(confirmPassWord.getText().length()<8){
            JOptionPane.showMessageDialog(this,"You have to confirm your password ");
        }else if(!passWord2.getText().equals(confirmPassWord.getText())){
            JOptionPane.showMessageDialog(this,"Passwords do not match !");
        } else if(uID.getText().length()<5 || uID.getText().length()>10){
             JOptionPane.showMessageDialog(this,"Entered UID is not valid");
        }else if(CheckValue==false){
            JOptionPane.showMessageDialog(this,"You have to agree to the Rules and Regulations of the University");
        }/*else if(username.equals(userName2.getText())){
            JOptionPane.showMessageDialog(this,"Entered User Name is not valid");
        }*/else if(!SpecialCharPatten.matcher(passWord2.getText()).find()){
           JOptionPane.showMessageDialog(this, "Your Password must consist of at least one Special Character !");
        }else if(!UpperCasePatten.matcher(passWord2.getText()).find()){
           JOptionPane.showMessageDialog(this, "Your Password must consist of at least one Block Letter !");
        }else if(!lowerCasePatten.matcher(passWord2.getText()).find()){
           JOptionPane.showMessageDialog(this, "Your Password must consist of at least one simple letter !");
        }else if(!digitalCasePatten.matcher(passWord2.getText()).find()){
           JOptionPane.showMessageDialog(this, "Your Password must consist of at least one digit !");
        }else if(!emailpattern.matcher(email.getText()).find()){
            JOptionPane.showMessageDialog(this, "Entered Email address cannot be accepted ");
        }else if(!mobilepatten.matcher(mobile.getText()).find()){
            JOptionPane.showMessageDialog(this, "Entered Mobile number cannot be accepted ");
        }else if(pathname.getText().isEmpty()){
            JOptionPane.showMessageDialog(this,"You have to a upload a valid profile photo, Check and try again !");
        }
        
        
        else{
            
            try{ 
                
            Conn.Database.getDatabaseConnection();
            try{
                FileInputStream fin = new FileInputStream(f);
                PreparedStatement ps1=Conn.Database.con.prepareStatement("Select username,fullname from user where username=? or uid=? or email=?");
                ps1.setString(1, userName2.getText());
                ps1.setString(2, uID.getText());
                ps1.setString(3, email.getText());
                ResultSet rs=ps1.executeQuery();
                if(rs.next()){
                    JOptionPane.showMessageDialog(this, "Entered credential data is corrupted ! \nTip: Enter a different User name and/or Email Address or enter a valid UID number   ");
                }else{
            PreparedStatement ps=Conn.Database.con.prepareStatement("Insert into user(username,fullname,password,uid,faculty,department,gender,recorddate,email,mobile,hrtype,photo) values(?,?,?,?,?,?,?,current_date,?,?,?,?)");
            ps.setString(1,userName2.getText());
            ps.setString(2,fullName.getText());
            ps.setString(3,passWord2.getText());
            ps.setString(4,uID.getText());
            ps.setString(5,jComboBox1.getSelectedItem().toString());
            ps.setString(6,jComboBox2.getSelectedItem().toString());
            ps.setInt(7,gendervalue);
            ps.setString(8,email.getText());
            int phonenumber=Integer.parseInt(mobile.getText());
            ps.setInt(9, phonenumber);
            ps.setString(10,jComboBox3.getSelectedItem().toString() );
            ps.setBinaryStream(11,(InputStream)fin,(int)f.length());
            
            ps.executeUpdate();
           PreparedStatement ps2=Conn.Database.con.prepareStatement("Select photo from user where username=?");
           ps2.setString(1, userName2.getText());
           ResultSet rs2=ps2.executeQuery(); 
           if(rs2.next()){
               try {
                   BufferedImage im = ImageIO.read(rs2.getBinaryStream(1));
                   im =linearResizeBi(im, 150, 150);
                   School.image1 = new ImageIcon(im);
                   userphoto.setIcon(School.image1);
                   JOptionPane.showMessageDialog(this,"Welcome to your Home !!!");
                   School.USERNAME=userName2.getText();
            

        NewComer n=new NewComer();
        n.setVisible(true);
        n.setLocationRelativeTo(null);
        this.dispose();
        Conn.Database.disconnectDatabase();
        
        /*Basics b=new Basics();
        b.setuid(uidreg);
        b.setfaculty(facultyreg);
        b.setdepartment(departmentreg);
        b.setusername(userreg);*/
                }catch(IOException fx){
                    JOptionPane.showMessageDialog(this,"Error In IOException: \n"+fx);
                }
            }else{
               JOptionPane.showMessageDialog(this,"Please refresh the application or exit for a while !  ");
           }
                }
           }catch(FileNotFoundException fx){
                JOptionPane.showMessageDialog(this,"Error In File:\n"+fx);
            }             
        }catch(HeadlessException x){
           JOptionPane.showMessageDialog(this,"Error:\n"+x);
        }catch(SQLException ex){
           JOptionPane.showMessageDialog(this,"Error In SQL: \n"+ex);
       }  
            }     
                                            

        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        userName2.setText(null);
        fullName.setText(null);
        passWord2.setText(null);
        uID.setText(null);
        confirmPassWord.setText(null);
        jComboBox1.setSelectedIndex(0);
        jComboBox2.setSelectedIndex(0);
        radioMale.setSelected(true);
        accept.setSelected(false);
        jComboBox3.setSelectedIndex(0);
        email.setText(null);
        mobile.setText(null);
        pathname.setText(null);
        uploadphoto.setIcon(null);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String user1=userName2.getText();
        String user2=fullName.getText();
        String user3=uID.getText();
        if(user1.isEmpty() && user2.isEmpty() && user3.isEmpty() && pathname.getText().isEmpty() ){
            Login log=new Login();
            log.setVisible(true);
            log.setLocationRelativeTo(null);
            this.dispose();
        }
        else{
            int option=JOptionPane.showConfirmDialog(this,"Do you want to terminate the Registration ?","Confirm your decision",JOptionPane.YES_NO_CANCEL_OPTION);
            if(option==JOptionPane.YES_OPTION){
                Login log=new Login();
                log.setVisible(true);
                log.setLocationRelativeTo(null);
                this.dispose();
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void userName2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userName2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userName2ActionPerformed

    private void userName2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userName2KeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN){
            if(userName2.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Entered Username cannot be accepted !");
            }else{
            fullName.requestFocus();
        }
    }//GEN-LAST:event_userName2KeyPressed
    }
    private void fullNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fullNameKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN){
            if(fullName.getText().isEmpty()){
                 JOptionPane.showMessageDialog(this,"Entered Full Name cannot be accepted !");
            }else{
            passWord2.requestFocus();
        }
    }//GEN-LAST:event_fullNameKeyPressed
    }
    private void passWord2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passWord2KeyPressed
       if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN){
           if(passWord2.getText().length()==0){
               JOptionPane.showMessageDialog(this,"Entered Password cannot be accepted !");
           }else if(passWord2.getText().length()<8 || passWord2.getText().length()>64){
               JOptionPane.showMessageDialog(this,"Your Password must have at least Eight characters !");
           }else if(!SpecialCharPatten.matcher(passWord2.getText()).find()){
           JOptionPane.showMessageDialog(this, "Your Password must consist of at least one Special Character !");
       }else if(!UpperCasePatten.matcher(passWord2.getText()).find()){
           JOptionPane.showMessageDialog(this, "Your Password must consist of at least one Block Letter !");
       }else if(!lowerCasePatten.matcher(passWord2.getText()).find()){
           JOptionPane.showMessageDialog(this, "Your Password must consist of at least one simple letter !");
       }else if(!digitalCasePatten.matcher(passWord2.getText()).find()){
           JOptionPane.showMessageDialog(this, "Your Password must consist of at least one digit !");
       }else{
           confirmPassWord.requestFocus();
       }
    }//GEN-LAST:event_passWord2KeyPressed
    }
    private void confirmPassWordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_confirmPassWordKeyPressed
if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN){
    if(!passWord2.getText().equals(confirmPassWord.getText())){
        JOptionPane.showMessageDialog(this, "Passwords do not match !");
    }else{
        jComboBox3.requestFocus();
    }
}
    }//GEN-LAST:event_confirmPassWordKeyPressed

    private void uIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uIDKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN){
            if(uID.getText().isEmpty()){
                JOptionPane.showMessageDialog(this,"Entered UID is not valid");
            }else if(uID.getText().length()<5 || uID.getText().length()>10){
                JOptionPane.showMessageDialog(this,"Entered UID is not valid");
            }else{
            email.requestFocus();
        }
    }//GEN-LAST:event_uIDKeyPressed
    }
    private void jComboBox3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox3KeyPressed
       if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_RIGHT){
           if("Senior Professor".equals(jComboBox3.getSelectedItem().toString())||"Professor".equals(jComboBox3.getSelectedItem().toString())||"Senior Lecturer G-1".equals(jComboBox3.getSelectedItem().toString())||"Senior Lecturer G-2".equals(jComboBox3.getSelectedItem().toString())||"Lecturer".equals(jComboBox3.getSelectedItem().toString())||"Assistant Lecturer".equals(jComboBox3.getSelectedItem().toString())){
               uID.setText("ACA");
               uID.requestFocus();
           }else if("Post Graduate student".equals(jComboBox3.getSelectedItem().toString())){
               uID.setText("STP");
           uID.requestFocus();
       }else if("Student 4th Year".equals(jComboBox3.getSelectedItem().toString())|| "Student 3rd Year".equals(jComboBox3.getSelectedItem().toString())||"Student 2nd Year".equals(jComboBox3.getSelectedItem().toString())||"Student 1st Year".equals(jComboBox3.getSelectedItem().toString())){
           uID.setText("STU");
           uID.requestFocus();
       }else if("Labour".equals(jComboBox3.getSelectedItem().toString())){
           uID.setText("OTA");
           uID.requestFocus();
       }else{
           uID.setText("NAC");
           uID.requestFocus();
       } 
    }//GEN-LAST:event_jComboBox3KeyPressed
    }
    private void uIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_uIDActionPerformed

    private void jComboBox3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBox3FocusLost
        if("Senior Professor".equals(jComboBox3.getSelectedItem().toString())||"Professor".equals(jComboBox3.getSelectedItem().toString())||"Senior Lecturer G-1".equals(jComboBox3.getSelectedItem().toString())||"Senior Lecturer G-2".equals(jComboBox3.getSelectedItem().toString())||"Lecturer".equals(jComboBox3.getSelectedItem().toString())||"Assistant Lecturer".equals(jComboBox3.getSelectedItem().toString())){
               uID.setText("ACA");
               uID.requestFocus();
           }else if("Post Graduate student".equals(jComboBox3.getSelectedItem().toString())){
               uID.setText("STP");
           uID.requestFocus();
       }else if("Student 4th Year".equals(jComboBox3.getSelectedItem().toString())|| "Student 3rd Year".equals(jComboBox3.getSelectedItem().toString())||"Student 2nd Year".equals(jComboBox3.getSelectedItem().toString())||"Student 1st Year".equals(jComboBox3.getSelectedItem().toString())){
           uID.setText("STU");
           uID.requestFocus();
       }else if("Labour".equals(jComboBox3.getSelectedItem().toString())){
           uID.setText("OTA");
           uID.requestFocus();
       }else{
           uID.setText("NAC");
           uID.requestFocus();
       } 
    }//GEN-LAST:event_jComboBox3FocusLost

    private void mobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mobileActionPerformed

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void emailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailKeyPressed
      if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN ||evt.getKeyCode()==KeyEvent.VK_RIGHT ){
          if(!emailpattern.matcher(email.getText()).find()){
              JOptionPane.showMessageDialog(this, "Entered Email address  cannot be accepted ");
          }else{
              mobile.requestFocus();
          }
      }
    }//GEN-LAST:event_emailKeyPressed

    private void mobileKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mobileKeyPressed
       if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN){
           if(!mobilepatten.matcher(mobile.getText()).find()){
               JOptionPane.showMessageDialog(this, "Entered Mobile number cannot be accepted ");
           }else{
               uploadphoto.requestFocus();
           }
       }
    }//GEN-LAST:event_mobileKeyPressed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void uploadphotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadphotoActionPerformed
       JFileChooser chooser = new JFileChooser();
       chooser.showOpenDialog(null);
       f = chooser.getSelectedFile();
       String filename = f.getAbsolutePath();
        if (f == null) {
           return;
        }
        try{
            if(isJPEG(f)==true){
                if(f.length()< 2000000){
               pathname.setText(filename);
               SwingWorker sw = new SwingWorker() {
               @Override
               protected Object doInBackground() throws Exception {
                 Thread.sleep(5000);
                 ii = new ImageIcon(scaleImage(120, 120, ImageIO.read(new File(f.getAbsolutePath()))));
                 return null;
               }

               @Override
               protected void done() { 
                super.done();
                uploadphoto.setIcon(ii);
            
               }  

               private BufferedImage scaleImage(int w, int h, BufferedImage img)throws Exception {
                   BufferedImage bi;
                   bi = new BufferedImage(w, h, BufferedImage.TRANSLUCENT);
                   Graphics2D g2d = (Graphics2D) bi.createGraphics();
                   g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                   g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
                   g2d.drawImage(img, 0, 0, w, h, null);
                   g2d.dispose();
                   return bi;
               }
               };
               sw.execute();
                }else{
                    JOptionPane.showMessageDialog(this, "Entered file is too large !  \nPlease enter an image file which is not not larger than 2 MB ");
                }
            }else{
                 JOptionPane.showMessageDialog(this, "Entered file is not a recognized image, Check and Try again !");
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this,"Error:\n"+ex);
        }
    }//GEN-LAST:event_uploadphotoActionPerformed
        
    private void uploadphotoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_uploadphotoKeyPressed
    
      if(evt.getKeyCode()==KeyEvent.VK_ENTER){
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        f = chooser.getSelectedFile();
        String filename = f.getAbsolutePath();
        if (f == null) {
        return;
        }
        try {
            if(isJPEG(f)== true){
                 if(f.length()< 2000000){
                pathname.setText(filename);
                SwingWorker sw = new SwingWorker() {
                @Override
                protected Object doInBackground() throws Exception {
                 Thread.sleep(5000);
                 ii = new ImageIcon(scaleImage(120, 120, ImageIO.read(new File(f.getAbsolutePath()))));
                 return null;
                }

                @Override
                protected void done() { 
                super.done();
                uploadphoto.setIcon(ii);
            
                }  

                private BufferedImage scaleImage(int w, int h, BufferedImage img)throws Exception {
                   BufferedImage bi;
                   bi = new BufferedImage(w, h, BufferedImage.TRANSLUCENT);
                   Graphics2D g2d = (Graphics2D) bi.createGraphics();
                   g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                   g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
                   g2d.drawImage(img, 0, 0, w, h, null);
                   g2d.dispose();
                   return bi;
                }
                };
                sw.execute();  
                }else{
                    JOptionPane.showMessageDialog(this, "Entered file is too large !  \nPlease enter an image file which is not not larger than 2 MB ");
                }
            }else{
                JOptionPane.showMessageDialog(this, "Entered file is not a recognized image, Check and Try again !");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,"Error:\n"+ex);
        }
}
    }//GEN-LAST:event_uploadphotoKeyPressed

    private void codegoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codegoActionPerformed
       int option=JOptionPane.showConfirmDialog(this, "Do you want to exit the Registration and go to General Code of Conduct ?  \n       Note that the data which you entered will NOT be saved !","Confirm your Decision", JOptionPane.YES_NO_CANCEL_OPTION);
       if(option==JOptionPane.YES_OPTION){
        Code c=new Code();
       c.setVisible(true);
       c.setLocationRelativeTo(null);
       this.dispose();
    }//GEN-LAST:event_codegoActionPerformed
    }
    private void helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpActionPerformed
       Help h=new Help();
       h.setVisible(true);
       h.setLocationRelativeTo(null);
    }//GEN-LAST:event_helpActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Registration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Mobilenumber;
    private javax.swing.JCheckBox accept;
    private javax.swing.JButton codego;
    private javax.swing.JPasswordField confirmPassWord;
    private javax.swing.JTextField email;
    private javax.swing.JLabel emailaddress;
    private javax.swing.JTextField fullName;
    private javax.swing.JButton help;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField mobile;
    private javax.swing.JPasswordField passWord2;
    private javax.swing.JTextField pathname;
    private javax.swing.JRadioButton radioFemale;
    private javax.swing.ButtonGroup radioGender;
    private javax.swing.JRadioButton radioMale;
    private javax.swing.JTextField uID;
    private javax.swing.JButton uploadphoto;
    private javax.swing.JTextField userName2;
    private javax.swing.JLabel username;
    private javax.swing.JLabel userphoto;
    // End of variables declaration//GEN-END:variables
}
