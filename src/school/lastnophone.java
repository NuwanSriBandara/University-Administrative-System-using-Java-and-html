/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package school;

import java.awt.Graphics2D;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.Timer;
import java.util.TimerTask;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author HP
 */
public class lastnophone extends javax.swing.JFrame {

   int attempts=0;
   public String newimage;
   static int interval;
   static Timer timer;
   Pattern emailpattern=Pattern.compile("^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$");
    
   public lastnophone() {
        initComponents();
        getimage();
        stopwatch();
        username.requestFocus();
    }
    
    public void stopwatch(){   
        int delay =1000;
        int period =1000;
        timer=new Timer();
        interval= 180;
        timer.scheduleAtFixedRate(new TimerTask() {
        public void run() {
            setInterval();
        }
    }, delay, period);
    }
public int setInterval() {
    if (interval == 1){
        timer.cancel();
        System.exit(0);
    }
    return --interval;
        
}
    public static BufferedImage linearResizeBi(BufferedImage origin, int width, int height) {
       BufferedImage resizedImage = new BufferedImage(width, height ,BufferedImage.TYPE_INT_RGB);
        Graphics2D g = resizedImage.createGraphics();
        float xScale = (float)width / origin.getWidth();
        float yScale = (float)height / origin.getHeight();
        AffineTransform at = AffineTransform.getScaleInstance(xScale,yScale);
        g.drawRenderedImage(origin,at);
        g.dispose();
        return resizedImage;
    }
    
    public void getimage(){
        try{
           Conn.Database.getDatabaseConnection();
           PreparedStatement ps = Conn.Database.con.prepareStatement("Select imagename from randomimage"); 
             ResultSet rs=ps.executeQuery();
             List<String> imageid=new ArrayList<String>();
             while(rs.next()){
                 imageid.add(rs.getString("imagename"));
             }
             rs.close();
             ps.close();
             Random r=new Random();
                 newimage = imageid.get(r.nextInt(imageid.size()));
                 //System.out.println(newimage);
                 PreparedStatement ps1=Conn.Database.con.prepareStatement("Select image from randomimage where imagename='"+newimage+"'");
                 ResultSet rs1=ps1.executeQuery();
                 if(rs1.next()){
                     try{
                       BufferedImage im = ImageIO.read(rs1.getBinaryStream(1));
                       im =linearResizeBi(im, 100, 25);
                       ImageIcon rimage=new ImageIcon(im);
                       imagelabel.setIcon(rimage);
                     }catch (IOException fx) {
                   JOptionPane.showMessageDialog(this,"Error In IOException: \n"+fx);
                     }
                 }else{
                    JOptionPane.showMessageDialog(this, "Please exit resetting password and try again after a while !   "); 
                 }
             
        }catch(HeadlessException x){
           JOptionPane.showMessageDialog(this,"Error:\n"+x);
        }catch(SQLException ex){
           JOptionPane.showMessageDialog(this,"Error In SQL: \n"+ex);
       }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        mobile = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        imagelabel = new javax.swing.JLabel();
        check = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        enteremail = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        generatedemail = new javax.swing.JTextField();
        submit = new javax.swing.JButton();
        imagetext = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Confirm yourself. First !");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(545, 515));
        setMinimumSize(new java.awt.Dimension(545, 515));
        setPreferredSize(new java.awt.Dimension(545, 515));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("University of Moratuwa");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(65, 20, 390, 40));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText(" All Rights Reserved by UoM");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 450, 170, 30));

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jTextField2.setText("* Note that at FIRST, the all below three credentials must be filled within one attempt ");
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, 460, -1));

        jTextField3.setEditable(false);
        jTextField3.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jTextField3.setText("  and press CHECK button in order to follow the recovering process after that do");
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 460, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("User name");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, 140, 30));

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Mobile Number");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 140, 30));

        username.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                usernameKeyPressed(evt);
            }
        });
        getContentPane().add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(221, 130, 230, 25));

        mobile.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        mobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mobileKeyPressed(evt);
            }
        });
        getContentPane().add(mobile, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 160, 195, 25));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Enter your Email Address");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 360, 160, 30));
        getContentPane().add(imagelabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 190, 100, 25));

        check.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        check.setText("CHECK");
        check.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkActionPerformed(evt);
            }
        });
        getContentPane().add(check, new org.netbeans.lib.awtextra.AbsoluteConstraints(341, 240, 110, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("What is in the image ");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 160, 30));

        enteremail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(enteremail, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 363, 230, 25));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Email Address related");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 310, 160, 30));

        generatedemail.setEditable(false);
        generatedemail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(generatedemail, new org.netbeans.lib.awtextra.AbsoluteConstraints(221, 310, 230, 25));

        submit.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        submit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/submit.png"))); // NOI18N
        submit.setText("  SUBMIT");
        submit.setBorderPainted(false);
        submit.setContentAreaFilled(false);
        submit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });
        getContentPane().add(submit, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 405, 160, 40));

        imagetext.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(imagetext, new org.netbeans.lib.awtextra.AbsoluteConstraints(221, 190, 140, 25));

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField1.setText("+94");
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(221, 160, 35, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jLabel8.setText("* Fully enter the above Email Address that you entered at the Registration");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 341, 390, -1));

        jTextField4.setEditable(false);
        jTextField4.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        jTextField4.setText("  necessary to rest your password");
        getContentPane().add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 190, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/sri-lanka.jpg"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 100, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void usernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN){
            if(username.getText().isEmpty()){
                JOptionPane.showMessageDialog(this, "Entered current profile name cannot be accepted !       ");
            }else{
                mobile.requestFocus();
            }
        }
    }//GEN-LAST:event_usernameKeyPressed

    private void mobileKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mobileKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER || evt.getKeyCode()==KeyEvent.VK_DOWN){
            if(mobile.getText().isEmpty() || mobile.getText().length()<5){
                JOptionPane.showMessageDialog(this, "Entered new name cannot be accepted !       ");
            }else{
                imagetext.requestFocus();
            }
        }
    }//GEN-LAST:event_mobileKeyPressed

    private void checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkActionPerformed
       if(username.getText().isEmpty() || mobile.getText().isEmpty() || imagetext.getText().isEmpty()){
           JOptionPane.showMessageDialog(this, "Entered one or more data among above is corrupted or empty,   \nCheck and Try again !    ");
           ++attempts;
           if(attempts>=3){
               System.exit(0);
           }
       }else{
           try{
               Conn.Database.getDatabaseConnection();
               PreparedStatement ps = Conn.Database.con.prepareStatement("Select UserID, FullName from user where UserName=? AND mobile=?");
               ps.setString(1,username.getText());
               ps.setString(2,mobile.getText());
           
               ResultSet rs=ps.executeQuery();
               if(rs.next()){
                  PreparedStatement ps1=Conn.Database.con.prepareStatement("Select imageid from randomimage where imagename='"+newimage+"' AND imagetext=binary'"+imagetext.getText()+"'");
                  ResultSet rs1=ps1.executeQuery();
                  if(rs1.next()){
                      PreparedStatement ps2 = Conn.Database.con.prepareStatement("Select email from user where UserName=? AND mobile=?");
                      ps2.setString(1,username.getText());
                      ps2.setString(2,mobile.getText());
                      ResultSet rs2=ps2.executeQuery();
                      if(rs2.next()){
                         StringBuilder sb=new StringBuilder(rs2.getString("email"));
                         int x=sb.length();
                         if(x<12){
                             for(int index=2;index<x;index++){
                                 sb.setCharAt(index, 'x');
                             }
                             String newsb=sb.toString();
                             generatedemail.setText(newsb);
                         }else{
                             for(int index=3;index<x;index++){
                                 sb.setCharAt(index,'x');
                             }
                             String newsb=sb.toString();
                             generatedemail.setText(newsb);
                         }
                      }
                  }else{
                     JOptionPane.showMessageDialog(this,"Prove that you are holding an authorized access request !       "); 
                     ++attempts;
           if(attempts>=3){
               System.exit(0);
                  }
                  }
               }else{
                  JOptionPane.showMessageDialog(this,"Entered profile credential data is/are corrupted ! \n Please check and Try again !       "); 
                  ++attempts;
           if(attempts>=3){
               System.exit(0);
           }
               }
                   Conn.Database.disconnectDatabase();
               
           }catch(HeadlessException x){
           JOptionPane.showMessageDialog(this,"Error:\n"+x);
           }catch(SQLException ex){
           JOptionPane.showMessageDialog(this,"Error In SQL: \n"+ex);
           }
       }
    }//GEN-LAST:event_checkActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        if(enteremail.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter the email address which you entered at the Registration !     ");
            ++attempts;
           if(attempts>=3){
               System.exit(0);
           }
        }else if(!emailpattern.matcher(enteremail.getText()).find()){
            JOptionPane.showMessageDialog(this, "Entered Email address cannot be accepted  !     ");
            ++attempts;
           if(attempts>=3){
               System.exit(0);
           }
        }else{
        
        try{
           Conn.Database.getDatabaseConnection();
           PreparedStatement ps = Conn.Database.con.prepareStatement("Select userid from user where UserName=? AND mobile=? and email=?");
               ps.setString(1,username.getText());
               ps.setString(2,mobile.getText());
               ps.setString(3, enteremail.getText());
               ResultSet rs=ps.executeQuery();
               if(rs.next()){
                   timer.cancel();
                   JOptionPane.showMessageDialog(this, "A recovery code with six digits has been sent to your email address      \nPlease check and enter that code !     ");
                   PreparedStatement ps1= Conn.Database.con.prepareStatement("Insert into forgotpassword(username,recordtime) values(?,now())");
                   ps1.setString(1, username.getText());
                   ps1.executeUpdate();
                  
                   this.dispose();
                   enterdigits e=new enterdigits();
                   e.setVisible(true);
                   e.setLocationRelativeTo(null);
               }else{
                   JOptionPane.showMessageDialog(this, "Entered email address is not associated with your profile account      \nPlease check accurately and try again !     ");
                   ++attempts;
                   if(attempts>=3){
                       System.exit(0);
                   }
                   
               }
           
           
           
           
        }catch(HeadlessException x){
           JOptionPane.showMessageDialog(this,"Error:\n"+x);
           }catch(SQLException ex){
           JOptionPane.showMessageDialog(this,"Error In SQL: \n"+ex);
           }
        }
    }//GEN-LAST:event_submitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(lastnophone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(lastnophone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(lastnophone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(lastnophone.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new lastnophone().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton check;
    private javax.swing.JTextField enteremail;
    private javax.swing.JTextField generatedemail;
    private javax.swing.JLabel imagelabel;
    private javax.swing.JTextField imagetext;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField mobile;
    private javax.swing.JButton submit;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
